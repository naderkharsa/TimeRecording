//@ui5-bundle sap/ui/timebookings/Component-preload.js
sap.ui.require.preload({
	"sap/ui/timebookings/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","sap/ui/core/ComponentSupport"],e=>{"use strict";return e.extend("sap.ui.timebookings.Component",{metadata:{manifest:"json"}})});
},
	"sap/ui/timebookings/controller/Main.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/m/MessageToast","sap/ui/core/Fragment"],function(t,e,o,n){"use strict";return t.extend("sap.ui.timebookings.controller.Main",{onInit:function(){const t={entry:{start:null,end:null,shortText:"",accountingId:"",accountingText:"",projectId:"",project:""},timer:0,start:false,editMode:false,editContextPath:null};const o=new e(t);o.setDefaultBindingMode(sap.ui.model.BindingMode.TwoWay);this.getView().setModel(o)},_getODataModel:function(){return this.getView().getModel("odataModel")||this.getView().getModel()},_getEntriesBinding:function(){const t=this.byId("entryList");return t.getBinding("items")},onOpenTimePopup:async function(){const t=this.getView().getModel();let e="";let o="";const i=this.byId("projectSelectMain");if(i){e=i.getSelectedKey();o=i.getSelectedItem()?.getText()||""}t.setProperty("/entry",{start:new Date,end:new Date(Date.now()+30*60*1e3),shortText:"",accountingId:"",accountingText:"",projectId:e,project:o});if(!this._oTimeDialog){this._oTimeDialog=await n.load({id:"timeInfoFragment",name:"sap.ui.timebookings.view.fragment.TimeInfoDialog",controller:this});this._oTimeDialog.setModel(t);this.getView().addDependent(this._oTimeDialog)}t.refresh(true);this._oTimeDialog.open();const s=sap.ui.core.Fragment.byId("timeInfoFragment","addBtn");if(s)s.setEnabled(false);this.onDialogInputChange()},onPopupAdd:async function(){const t=this.getView().getModel();const e=t.getProperty("/entry");const n=e.end-e.start;const i=Math.round(n/(1e3*60));const s=Math.floor(i/60);const r=(s>0?s+"h ":"")+i%60+"m";const a={start:e.start.toISOString(),end:e.end.toISOString(),shortText:e.shortText,accountingText:e.accountingText,accountingId:e.accountingId,project:e.project,projectId:e.projectId,duration:r,date:e.start.toISOString().split("T")[0]};try{if(t.getProperty("/editMode")&&this._editCtx){Object.keys(a).forEach(t=>this._editCtx.setProperty(t,a[t]));await this._getODataModel().submitBatch("$auto");o.show("Eintrag aktualisiert");this._editCtx=null;t.setProperty("/editMode",false)}else{const t=this._getEntriesBinding();const e=t.create(a,false);await e.created();o.show(this.getView().getModel("i18n").getResourceBundle().getText("msgTimeSaved"))}const e=this.byId("entryList");if(e){e.getBinding("items").refresh()}}catch(t){o.show("Fehler beim Speichern: "+(t.message||t))}this._oTimeDialog.close();t.setProperty("/entry",{start:null,end:null,shortText:"",accountingId:"",accountingText:"",projectId:"",project:""})},onStartTimer:function(){const t=this.getView().getModel();const e=this.byId("projectSelectMain");const n=e?.getSelectedKey()||"";if(!n){const t=this.getOwnerComponent().getModel("i18n");t.getResourceBundle().then(t=>{o.show(t.getText("msgChooseProject"))});return}t.setProperty("/entry/projectId",n);t.setProperty("/entry/project",e?.getSelectedItem()?.getText()||"");if(!t.getProperty("/start")){this._startTime=new Date;this._timerInterval=setInterval(()=>{t.setProperty("/timer",t.getProperty("/timer")+1)},1e3);t.setProperty("/start",true)}else{clearInterval(this._timerInterval);this._stopTime=new Date;t.setProperty("/start",false);this._openStopDialog()}},_openStopDialog:function(){if(!this._pStopDialog){n.load({id:this.getView().getId(),name:"sap.ui.timebookings.view.fragment.StopDialog",controller:this}).then(t=>{this._pStopDialog=t;this.getView().addDependent(t);t.open();const e=sap.ui.core.Fragment.byId(this.getView().getId(),"okBtn");if(e)e.setEnabled(false)})}else{this._pStopDialog.open();const t=sap.ui.core.Fragment.byId(this.getView().getId(),"okBtn");if(t)t.setEnabled(false)}},onStopConfirm:async function(){const t=this.getView().getModel();const e=t.getProperty("/entry");const n=this.byId("projectSelectMain");const i=n?.getSelectedKey()||e.projectId||"";const s=n?.getSelectedItem()?.getText()||e.project||i;const{start:r,end:a,durationFormatted:c}=this.calculateDuration(this._startTime,this._stopTime);const g={start:r.toISOString(),end:a.toISOString(),shortText:e.shortText,accountingText:e.accountingText,accountingId:e.accountingId,project:s,projectId:i,duration:c,date:r.toISOString().split("T")[0]};try{const t=this._getEntriesBinding();const e=t.create(g,false);await e.created();const n=this.byId("entryList");if(n){n.getBinding("items").refresh()}o.show(this.getView().getModel("i18n").getResourceBundle().getText("msgTimeSaved"))}catch(t){o.show("Fehler beim Speichern: "+(t.message||t))}t.setProperty("/entry",{start:null,end:null,shortText:"",accountingId:"",accountingText:"",projectId:"",project:""});t.setProperty("/timer",0);t.setProperty("/start",false);t.refresh(true);this._pStopDialog.close()},onEditEntry:async function(t){const e=this.getView().getModel();const o=t.getSource().getBindingContext("odataModel");if(!o)return;const i=o.getObject();e.setProperty("/entry",{start:new Date(i.start),end:new Date(i.end),shortText:i.shortText,accountingText:i.accountingText,accountingId:i.accountingId,project:i.project,projectId:i.projectId});e.setProperty("/editMode",true);this._editCtx=o;e.setProperty("/editContextPath",null);if(!this._oTimeDialog){this._oTimeDialog=await n.load({id:"timeInfoFragment",name:"sap.ui.timebookings.view.fragment.TimeInfoDialog",controller:this});this.getView().addDependent(this._oTimeDialog)}this._oTimeDialog.open()},onDeleteEntry:async function(t){const e=t.getSource().getBindingContext("odataModel");if(!e)return;try{await e.delete("$auto");o.show("Eintrag gelöscht")}catch(t){o.show("Löschen fehlgeschlagen: "+(t.message||t))}},onDialogInputChange:function(t){const e=this.getView().getModel();const o=e.getProperty("/entry");if(t&&t.getSource){const o=t.getSource();const n=o.getId?o.getId():"";if(n.includes("shortTextInput")){e.setProperty("/entry/shortText",o.getValue())}if(n.includes("accountingSelect")){e.setProperty("/entry/accountingId",o.getSelectedKey());e.setProperty("/entry/accountingText",o.getSelectedItem()?.getText())}if(n.includes("projectSelect")){e.setProperty("/entry/projectId",o.getSelectedKey());e.setProperty("/entry/project",o.getSelectedItem()?.getText())}}const n=typeof o.shortText==="string"&&o.shortText.trim().length>=5;const i=typeof o.accountingId==="string"&&o.accountingId.trim().length>0;const s=typeof o.projectId==="string"&&o.projectId.trim().length>0;const r=sap.ui.core.Fragment.byId(this.getView().getId(),"okBtn");const a=sap.ui.core.Fragment.byId("timeInfoFragment","addBtn");if(r)r.setEnabled(n&&i);if(a){const t=o.start instanceof Date&&!isNaN(o.start);const e=o.end instanceof Date&&!isNaN(o.end);a.setEnabled(n&&i&&s&&t&&e)}},onPopupCancel:function(){this._oTimeDialog.close()},onStopCancel:function(){this._pStopDialog.close()},formatHours:t=>t!==undefined?String(Math.floor(t/3600)).padStart(2,"0"):"00",formatMinutes:t=>t!==undefined?String(Math.floor(t%3600/60)).padStart(2,"0"):"00",formatSeconds:t=>t!==undefined?String(t%60).padStart(2,"0"):"00",formatButtonType:t=>t?"Negative":"Default",calculateDuration:function(t,e){const o=e-t;const n=Math.round(o/(1e3*60));const i=Math.floor(n/60);const s=n%60;const r=(i>0?i+"h ":"")+s+"m";return{start:t,end:e,durationFormatted:r}},getGroupHeader:function(t){return new sap.m.GroupHeaderListItem({title:"Datum: "+t.key,upperCase:false})}})});
},
	"sap/ui/timebookings/i18n/i18n.properties":'appTitle=Time Recording\nbtnStart=Start\nbtnStop=Stop\nbtnSave=Save\nbtnReset=Reset\nbtnAdd=Add\nbtnCancel=Cancel\nbtnOK=OK\n\nlistHeader=Recorded Times\nlblProject=Project\nlblStartTime=Start Time\nlblEndTime=End Time\nlblAccounting=Accounting Indicator\nlblShortText=Short Text\n\ntipAdd=Add new time entry\ntipEdit=Edit entry\ntipDelete=Delete entry\n\ndlgTimeInfoTitle=Time Entry Details\ndlgStopTitle=Work Description\ntxtWorkDesc=Describe your work\nphShortText=Short Text\n\naccounting01=01 - On Site\naccounting02=02 - Remote\n\nmsgTimeSaved=Time booking saved\nmsgChooseProject= Please choose a Project!',
	"sap/ui/timebookings/i18n/i18n_de.properties":'appTitle=Zeiterfassung\nbtnStart=Start\nbtnStop=Stopp\nbtnSave=Speichern\nbtnReset=Zur\\u00fccksetzen\nbtnAdd=Hinzuf\\u00fcgen\nbtnCancel=Abbrechen\nbtnOK=OK\n\nlistHeader=Erfasste Zeiten\nlblProject=Projekt\nlblStartTime=Startzeit\nlblEndTime=Endzeit\nlblAccounting=Abrechnungskennzeichen\nlblShortText=Kurztext\n\ntipAdd=Neue Zeitbuchung hinzuf\\u00fcgen\ntipEdit=Buchung bearbeiten\ntipDelete=Buchung l\\u00f6schen\n\ndlgTimeInfoTitle=Details zur Zeitaufzeichnung\ndlgStopTitle=Arbeitsbeschreibung\ntxtWorkDesc=Beschreibe deine Arbeit\nphShortText=Kurztext\n\naccounting01=01 - Vor Ort\naccounting02=02 - Remote\n\nmsgTimeSaved=Zeitbuchung gespeichert\nmsgChooseProject= W\\u00e4hle ein Projekt aus!',
	"sap/ui/timebookings/i18n/i18n_en.properties":'appTitle=Time Recording\nbtnStart=Start\nbtnStop=Stop\nbtnSave=Save\nbtnReset=Reset\nbtnAdd=Add\nbtnCancel=Cancel\nbtnOK=OK\n\nlistHeader=Recorded Times\nlblProject=Project\nlblStartTime=Start Time\nlblEndTime=End Time\nlblAccounting=Accounting Indicator\nlblShortText=Short Text\n\ntipAdd=Add new time entry\ntipEdit=Edit entry\ntipDelete=Delete entry\n\ndlgTimeInfoTitle=Time Entry Details\ndlgStopTitle=Work Description\ntxtWorkDesc=Describe your work\nphShortText=Short Text\n\naccounting01=01 - On Site\naccounting02=02 - Remote\n\nmsgTimeSaved=Time booking saved\nmsgChooseProject= Please choose a Project!',
	"sap/ui/timebookings/manifest.json":'{"_version":"1.1.0","sap.app":{"id":"sap.ui.timebookings","type":"application","title":"Time Recording App"},"sap.ui":{"_version":"1.1.0","technology":"UI5","deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"dependencies":{"minUI5Version":"1.121.0","libs":{"sap.ui.core":{},"sap.m":{},"sap.f":{}}},"rootView":{"viewName":"sap.ui.timebookings.view.Main","type":"XML","id":"app"},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"sap.ui.timebookings.i18n.i18n","async":true}},"odataModel":{"type":"sap.ui.model.odata.v4.ODataModel","settings":{"synchronizationMode":"None","operationMode":"Server","serviceUrl":"/odata/v4/booking/","autoExpandSelect":true,"earlyRequests":true,"groupId":"$auto","updateGroupId":"$auto"}}},"resources":{"css":[{"uri":"css/styles.css"}]}}}',
	"sap/ui/timebookings/view/Main.view.xml":'<mvc:View controllerName="sap.ui.timebookings.controller.Main"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:core="sap.ui.core"\n    xmlns="sap.m"\n    xmlns:f="sap.f"\n    displayBlock="true"><App><Page><customHeader><f:ShellBar title="{i18n>appTitle}" class="myBigShellTitle" /></customHeader><content><f:DynamicPage><f:header><f:DynamicPageHeader pinnable="false"><HBox justifyContent="Start" alignItems="Center" class="sapUiSmallMargin"><Select\n                                    id="projectSelectMain"\n                                    forceSelection="false"\n                                    width="20rem"\n                                    class="projectDropdown"\n                                    selectedKey="{/entry/projectId}"\n                                    items="{ path: \'odataModel>/Projects\' }"><core:Item key="{odataModel>projectID}" text="{odataModel>project}"/></Select><Button\n                                    text="{= ${/start} ? ${i18n>btnStop} : ${i18n>btnStart} }"\n                                    icon="{= ${/start} ? \'sap-icon://media-pause\' : \'sap-icon://media-play\' }"\n                                    type="{ path: \'/start\', formatter: \'.formatButtonType\' }"\n                                    press=".onStartTimer" /><Button icon="sap-icon://add"\n                                        type="Default"\n                                        class="plusBtn sapUiTinyMarginBegin"\n                                        press=".onOpenTimePopup"\n                                        tooltip="{i18n>tipAdd}" /><HBox id="timerDisplay" alignItems="Center" class="sapUiTinyMarginBegin"><Text text="{parts: [{ path: \'/timer\' }], formatter: \'.formatHours\'}" class="timerFace" /><Text text=":" /><Text text="{parts: [{ path: \'/timer\' }], formatter: \'.formatMinutes\'}" class="timerFace" /><Text text=":" /><Text text="{parts: [{ path: \'/timer\' }], formatter: \'.formatSeconds\'}" class="timerFace" /></HBox></HBox></f:DynamicPageHeader></f:header><f:content><List\n                            id="entryList"\n                            items="{\n                                path: \'odataModel>/Entries\',\n                                parameters: { $$groupId: \'$auto\', $$updateGroupId: \'$auto\' },\n                                sorter: { path: \'date\', descending: false },\n                                groupHeaderFactory: \'.getGroupHeader\'\n                            }"\n                            headerText="{i18n>listHeader}"\n                            growing="true"\n                            growingScrollToLoad="true"><CustomListItem><VBox class="entryBox"><HBox alignItems="Center" justifyContent="SpaceBetween"><Text text="{i18n>lblProject}: {odataModel>project}" class="entryProjectTitle" /><HBox justifyContent="End" alignItems="Center"><Button icon="sap-icon://edit" press=".onEditEntry" tooltip="{i18n>tipEdit}" /><Button icon="sap-icon://delete" press=".onDeleteEntry" tooltip="{i18n>tipDelete}" /></HBox></HBox><Text text="{odataModel>shortText}" class="entryDescription" wrapping="true" /><HBox justifyContent="SpaceBetween" alignItems="Center"><Text text="{odataModel>duration}" class="entryDuration sapUiTinyMarginBegin" /><Text text="{odataModel>accountingText}" class="entryAccounting" /><Text text="{odataModel>date}" class="entryDate" /></HBox></VBox></CustomListItem></List></f:content></f:DynamicPage></content><footer><OverflowToolbar><ToolbarSpacer /><Button text="{i18n>btnReset}" icon="sap-icon://undo" type="Reject" press=".onCancel" /><Button text="{i18n>btnSave}" icon="sap-icon://save" type="Emphasized" press=".onSave" /></OverflowToolbar></footer></Page></App></mvc:View>\n',
	"sap/ui/timebookings/view/fragment/StopDialog.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n    xmlns:core="sap.ui.core"><Dialog id="StopDialog" title="{i18n>dlgStopTitle}"><VBox class="sapUiSmallMargin"><Text text="{i18n>txtWorkDesc}" /><Input id="shortTextInput" value="{/entry/shortText}" liveChange=".onDialogInputChange" placeholder="{i18n>phShortText}" class="sapUiTinyMarginBottom" /><Label text="{i18n>lblAccounting}" /><Select id="accountingSelect" selectedKey="{/entry/accountingId}" forceSelection="false" change=".onDialogInputChange"><core:Item key="01" text="{i18n>accounting01}" /><core:Item key="02" text="{i18n>accounting02}" /></Select></VBox><beginButton><Button id="okBtn" text="{i18n>btnOK}" press=".onStopConfirm" enabled="false" /></beginButton><endButton><Button text="{i18n>btnCancel}" press=".onStopCancel" /></endButton></Dialog></core:FragmentDefinition>\n',
	"sap/ui/timebookings/view/fragment/TimeInfoDialog.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:l="sap.ui.layout"><Dialog id="TimeInfoDialog" title="{i18n>dlgTimeInfoTitle}" draggable="true" resizable="true" contentWidth="25rem"><VBox class="sapUiSmallMargin"><Label text="{i18n>lblProject}" /><Select id="projectSelectPopup"\n                selectedKey="{/entry/projectId}"\n                width="20rem"\n                forceSelection="false"\n                class="projectDropdown"\n                change=".onDialogInputChange"\n                items="{ path: \'odataModel>/Projects\' }"><core:Item key="{odataModel>projectID}" text="{odataModel>project}" /></Select><HBox class="sapUiSmallMarginTop"><VBox class="sapUiTinyMarginEnd"><Label text="{i18n>lblStartTime}" /><DateTimePicker id="startPicker" value="{\n                        path: \'/entry/start\',\n                        type: \'sap.ui.model.type.DateTime\',\n                        formatOptions: { pattern: \'yyyy-MM-dd HH:mm\' }\n                    }" change=".onDialogInputChange" class="sapUiSmallMarginBottom" /></VBox><VBox class="sapUiTinyMarginBegin"><Label text="{i18n>lblEndTime}" /><DateTimePicker id="endPicker" value="{\n                        path: \'/entry/end\',\n                        type: \'sap.ui.model.type.DateTime\',\n                        formatOptions: { pattern: \'yyyy-MM-dd HH:mm\' }\n                    }" change=".onDialogInputChange" class="sapUiSmallMarginBottom" /></VBox></HBox><Label text="{i18n>lblAccounting}" class="sapUiSmallMarginTop" /><Select id="accountingSelectPopup" selectedKey="{/entry/accountingId}" forceSelection="false" change=".onDialogInputChange"><core:Item key="01" text="{i18n>accounting01}" /><core:Item key="02" text="{i18n>accounting02}" /></Select><Label text="{i18n>lblShortText}" class="sapUiSmallMarginTop" /><Input id="shortTextInput2" value="{/entry/shortText}" liveChange=".onDialogInputChange" /><HBox alignItems="Center" justifyContent="SpaceBetween" class="sapUiSmallMarginTop"><Button text="{i18n>btnCancel}" type="Reject" press=".onPopupCancel" /><Button id="addBtn" text="{i18n>btnAdd}" type="Accept" press=".onPopupAdd" class="sapUiTinyMarginBegin" enabled="false" /></HBox></VBox></Dialog></core:FragmentDefinition>\n'
});
//# sourceMappingURL=Component-preload.js.map
